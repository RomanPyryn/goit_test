{"version":3,"file":"static/js/974.710580e0.chunk.js","mappings":"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","sources":["services/getUsers-api.js","components/Card/Card.styled.jsx","components/Card/index.jsx","components/UsersList/UsersList.styled.jsx","components/UsersList/index.jsx","views/Tweets.styled.jsx","views/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://643968a64660f26eb1b24094.mockapi.io/api/v1/users/';\n\nexport const getUsers = async limit => {\n  const response = axios(`${BASE_URL}?completed=false&page=1&limit=${limit}`);\n  try {\n    return response;\n  } catch (error) {\n    toast.error('Sorry! Something went wrong.');\n    console.log(error.message);\n  }\n};\n\nexport const getUserById = async user_id => {\n  const response = await axios(`${BASE_URL}${user_id}`);\n  try {\n    return response.data;\n  } catch (error) {\n    toast.error('Sorry! Something went wrong.');\n    console.log(error.message);\n  }\n};\n\nexport const addFollower = async (user_id, user_data) => {\n  const { data } = await axios.put(`${BASE_URL}${user_id}`, user_data);\n  try {\n    return data;\n  } catch (error) {\n    toast.error('Sorry! Something went wrong.');\n    console.log(error.message);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const UserCard = styled.div`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  margin-left: auto;\n  margin-right: auto;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const TopBox = styled.div`\n  position: relative;\n  width: 100%;\n  height: 222px;\n  background-image: url('/img/picture.png');\n  background-position: center center;\n  background-size: 308px 168px;\n  background-repeat: no-repeat;\n  &::after {\n    content: '';\n    position: absolute;\n    display: block;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 8px;\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n`;\n\nexport const UserBox = styled.div`\n  position: absolute;\n  bottom: -32px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  z-index: 9;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const User = styled.img`\n  position: relative;\n  width: 62px;\n  height: 62px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: #4b2a99;\n`;\n\nexport const InfoBox = styled.div`\n  width: 100%;\n  height: 238px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  text-align: center;\n  color: #ebd8ff;\n`;\n\nexport const Tweets = styled.p`\n  margin-top: 62px;\n  margin-bottom: 16px;\n`;\n\nexport const Followers = styled.p`\n  margin-bottom: 26px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 196px;\n  height: 50px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  background-color: #ebd8ff;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    scale: 1.03;\n    opacity: 0.8;\n  }\n  &.following {\n    background-color: #5cd3a8;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { addFollower } from '../../services/getUsers-api';\nimport {\n  UserCard,\n  TopBox,\n  Logo,\n  UserBox,\n  User,\n  InfoBox,\n  Tweets,\n  Followers,\n  Button,\n} from './Card.styled';\n\nfunction Card({ onData }) {\n  const [followings, setFollowings] = useState(false);\n  const [item, setItem] = useState(onData);\n  const { id, user, avatar, tweets, followers } = item;\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem(`${id}`));\n    if (items) {\n      setFollowings(items);\n    }\n  }, [id]);\n\n  const handleClick = async () => {\n    setFollowings(!followings);\n    followings\n      ? toast.info(`You are now unfollowed \"${user}\"!`)\n      : toast.success(`You are now following \"${user}\"!`);\n    localStorage.setItem(`${id}`, JSON.stringify(!followings));\n    const editedValue = followings\n      ? { followers: followers - 1 }\n      : { followers: followers + 1 };\n    const editedItem = await addFollower(id, editedValue);\n    setItem(editedItem);\n  };\n\n  return (\n    <>\n      <UserCard>\n        <TopBox>\n          <Logo src=\"./img/logo.png\" alt=\"logo\" />\n          <UserBox>\n            <User src={avatar} alt=\"user\" />\n          </UserBox>\n        </TopBox>\n        <InfoBox>\n          <Tweets>{tweets} tweets</Tweets>\n          <Followers>\n            {String(followers).length > 3\n              ? String(followers).slice(0, -3) +\n                ',' +\n                String(followers).slice(-3)\n              : followers}{' '}\n            Followers\n          </Followers>\n          <Button\n            onClick={handleClick}\n            className={followings ? 'following' : ''}\n          >\n            {followings ? 'Following' : 'Follow'}\n          </Button>\n        </InfoBox>\n      </UserCard>\n    </>\n  );\n}\n\nCard.propTypes = {\n  onData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    user: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Card;\n","import styled from '@emotion/styled';\n\nexport const UserList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 25px;\n  width: 1280px;\n  margin: 0 auto;\n`;\n\nexport const UserItem = styled.li`\n  padding: 15px;\n`;\n\nexport const UserName = styled.p`\n  padding: 15px;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  text-align: center;\n  color: #4b2a99;\n`;\n","import PropTypes from 'prop-types';\nimport Card from '../Card';\nimport { UserList, UserItem, UserName } from './UsersList.styled';\n\nconst UsersList = ({ onData }) => {\n  return (\n    <UserList>\n      {onData.map(item => (\n        <UserItem key={item.id}>\n          <Card onData={item}></Card>\n          <UserName>{item.user}</UserName>\n        </UserItem>\n      ))}\n    </UserList>\n  );\n};\n\nUsersList.propTypes = {\n  onData: PropTypes.arrayOf(PropTypes.shape),\n};\n\nexport default UsersList;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BackBtn = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  text-align: center;\n  margin-top: 25px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 150px;\n  height: 54px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 22px;\n  text-transform: uppercase;\n  background-color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  color: #ebd8ff;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n  }\n`;\n\nexport const LoadMoreBtn = styled.button`\n  display: block;\n  text-align: center;\n  margin: 25px auto;\n  width: 200px;\n  height: 54px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 22px;\n  text-transform: uppercase;\n  background-color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  color: #ebd8ff;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n  }\n`;\n\nexport const TweetsList = styled.ul`\n  width: 500px;\n  margin: 25px auto 0;\n`;\n\nexport const SpinerBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n","import { useState, useEffect } from 'react';\nimport { TailSpin } from 'react-loader-spinner';\nimport { getUsers } from '../services/getUsers-api';\nimport { BiArrowBack } from 'react-icons/bi';\nimport UsersList from '../components/UsersList';\nimport { BackBtn, SpinerBox, LoadMoreBtn } from './Tweets.styled';\n\nconst Tweets = () => {\n  const [users, setUsers] = useState([]);\n  const cardsPerPage = 9;\n  const [numOfCards, setNumOfCards] = useState(cardsPerPage);\n\n  useEffect(() => {\n    const fetchFunc = async numOfCards => {\n      try {\n        const results = await getUsers(numOfCards);\n        const items = results.data;\n        setUsers(items);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFunc(numOfCards);\n  }, [numOfCards]);\n\n  const handleLoamoreClick = () => {\n    setNumOfCards(numOfCards + cardsPerPage);\n  };\n  return (\n    <>\n      <BackBtn to={`/`}>\n        <BiArrowBack className=\"back-arrow\" />\n        Back\n      </BackBtn>\n      {users.length === 0 ? (\n        <SpinerBox>\n          <TailSpin\n            color=\"#4b2a99\"\n            height={50}\n            width={50}\n            ariaLabel=\"loading\"\n          />\n        </SpinerBox>\n      ) : (\n        <UsersList onData={users} />\n      )}\n      {users.length >= numOfCards && (\n        <LoadMoreBtn onClick={handleLoamoreClick}>Load more</LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["BASE_URL","getUsers","limit","response","axios","toast","console","log","message","addFollower","user_id","user_data","data","UserCard","styled","TopBox","Logo","UserBox","User","InfoBox","Tweets","Followers","Button","onData","useState","followings","setFollowings","item","setItem","id","user","avatar","tweets","followers","useEffect","items","JSON","parse","localStorage","getItem","handleClick","stringify","editedValue","editedItem","src","alt","String","length","slice","onClick","className","UserList","UserItem","UserName","map","BackBtn","Link","LoadMoreBtn","SpinerBox","users","setUsers","numOfCards","setNumOfCards","fetchFunc","results","to","color","height","width","ariaLabel"],"sourceRoot":""}