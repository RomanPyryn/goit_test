{"version":3,"file":"static/js/974.22ca7c6d.chunk.js","mappings":"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","sources":["services/getUsers-api.js","components/Card/Card.styled.jsx","components/Card/index.jsx","components/UsersList/UsersList.styled.jsx","components/UsersList/index.jsx","views/Tweets.styled.jsx","views/Tweets.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://643968a64660f26eb1b24094.mockapi.io/api/v1/users/\";\n\nexport const getUsers = async (limit) => {\n  const response = axios(`${BASE_URL}?completed=false&page=1&limit=${limit}`);\n  return response;\n};\n\nexport const getUserById = async (user_id) => {\n  const response = await axios(`${BASE_URL}${user_id}`);\n  return response.data;\n};\n\nexport const addFollower = async (user_id, user_data) => {\n\tconst { data } = await axios.put(`${BASE_URL}${user_id}`, user_data);\n\treturn data;\n};\n","import styled from '@emotion/styled';\n\nexport const UserCard = styled.div`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  margin-left: auto;\n  margin-right: auto;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const TopBox = styled.div`\n  position: relative;\n  width: 100%;\n  height: 222px;\n  background-image: url('/img/picture.png');\n  background-position: center center;\n  background-size: 308px 168px;\n  background-repeat: no-repeat;\n  &::after {\n    content: '';\n    position: absolute;\n    display: block;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 8px;\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n`;\n\nexport const UserBox = styled.div`\n  position: absolute;\n  bottom: -32px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  z-index: 9;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const User = styled.img`\n  position: relative;\n  width: 62px;\n  height: 62px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: #4b2a99;\n`;\n\nexport const InfoBox = styled.div`\n  width: 100%;\n  height: 238px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  text-align: center;\n  color: #ebd8ff;\n`;\n\nexport const Tweets = styled.p`\n  margin-top: 62px;\n  margin-bottom: 16px;\n`;\n\nexport const Followers = styled.p`\n  margin-bottom: 26px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 196px;\n  height: 50px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  background-color: #ebd8ff;\n  &.following {\n    background-color: #5cd3a8;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { addFollower } from '../../services/getUsers-api';\nimport {\n  UserCard,\n  TopBox,\n\tLogo,\n\tUserBox,\n  User,\n  InfoBox,\n  Tweets,\n  Followers,\n  Button,\n} from './Card.styled';\n\nfunction Card({ onData }) {\n  const [followings, setFollowings] = useState(false);\n  const [user, setUser] = useState(onData);\n  const { id, avatar, tweets, followers } = user;\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem(`${id}`));\n    if (items) {\n      setFollowings(items);\n    }\n  }, [id]);\n\n  const handleClick = async () => {\n    setFollowings(!followings);\n    localStorage.setItem(`${id}`, JSON.stringify(!followings));\n    const editedValue = followings\n      ? { followers: followers - 1 }\n      : { followers: followers + 1 };\n    const newUser = await addFollower(id, editedValue);\n    setUser(newUser);\n  };\n\n  return (\n    <>\n      <UserCard>\n        <TopBox>\n          <Logo src=\"./img/logo.png\" alt=\"logo\" />\n\t\t\t\t\t<UserBox>\n\t\t\t\t\t\t<User src={avatar} alt=\"user\" />\n\t\t\t\t\t</UserBox>\n        </TopBox>\n        <InfoBox>\n          <Tweets>{tweets} tweets</Tweets>\n          <Followers>\n            {String(followers).length > 3\n              ? String(followers).slice(0, -3) +\n                ',' +\n                String(followers).slice(-3)\n              : followers}{' '}\n            Followers\n          </Followers>\n          <Button\n            onClick={handleClick}\n            className={followings ? 'following' : ''}\n          >\n            {followings ? 'Following' : 'Follow'}\n          </Button>\n        </InfoBox>\n      </UserCard>\n    </>\n  );\n}\n\nexport default Card;\n","import styled from \"@emotion/styled\";\n\nexport const UserList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 25px;\n  width: 1280px;\n  margin: 0 auto;\n`;\n\nexport const UserItem = styled.li`\n  padding: 15px;\n`;\n\nexport const UserName = styled.p`\n  padding: 15px;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  text-align: center;\n  color: #4b2a99;\n`;\n","// import PropTypes from 'prop-types';\nimport Card from \"../Card\";\nimport { UserList, UserItem, UserName } from \"./UsersList.styled\";\n\nconst UsersList = ({ onData }) => {\n  return (\n    <UserList>\n      {onData.map((item) => (\n        <UserItem key={item.id}>\n          <Card onData={item}></Card>\n          <UserName>{item.user}</UserName>\n        </UserItem>\n      ))}\n    </UserList>\n  );\n};\n\n// UsersList.propTypes = {\n//   item: PropTypes.shape({\n//     id: PropTypes.string.isRequired,\n//   }),\n// };\n\nexport default UsersList;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  display: block;\n  cursor: pointer;\n  text-align: center;\n  padding-top: 15px;\n  margin-top: 25px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 150px;\n  height: 54px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 22px;\n  text-transform: uppercase;\n  background-color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  color: #ebd8ff;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  display: block;\n  cursor: pointer;\n  text-align: center;\n  margin: 25px auto;\n  width: 200px;\n  height: 54px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 22px;\n  text-transform: uppercase;\n  background-color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  color: #ebd8ff;\n`;\n\nexport const TweetsList = styled.ul`\n  width: 500px;\n  margin: 25px auto 0;\n`;\n","import { useState, useEffect } from 'react';\nimport * as getUsersApi from '../services/getUsers-api';\nimport UsersList from '../components/UsersList';\nimport { Button, LoadMoreBtn } from './Tweets.styled';\n\nconst Tweets = () => {\n  const [users, setUsers] = useState([]);\n  const limit = 9;\n  const [cards, setCards] = useState(limit);\n\n  useEffect(() => {\n    const fetchFunc = async cards => {\n      try {\n        const results = await getUsersApi.getUsers(cards);\n        const items = results.data;\n        setUsers(items);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFunc(cards);\n  }, [cards]);\n\n  const handleLoamoreClick = () => {\n    setCards(cards + limit);\n  };\n  return (\n    <>\n      <Button to={`/`}>Back</Button>\n      {users.length > 0 && <UsersList onData={users} />}\n      {users.length >= cards && (\n        <LoadMoreBtn onClick={handleLoamoreClick}>Load more</LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["BASE_URL","getUsers","limit","response","axios","addFollower","user_id","user_data","data","UserCard","styled","TopBox","Logo","UserBox","User","InfoBox","Tweets","Followers","Button","onData","useState","followings","setFollowings","user","setUser","id","avatar","tweets","followers","useEffect","items","JSON","parse","localStorage","getItem","handleClick","setItem","stringify","editedValue","newUser","src","alt","String","length","slice","onClick","className","UserList","UserItem","UserName","map","item","Link","LoadMoreBtn","users","setUsers","cards","setCards","fetchFunc","getUsersApi","results","console","log","to"],"sourceRoot":""}